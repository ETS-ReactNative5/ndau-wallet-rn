// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SetupGetRandom snapshot renders correctly 1`] = `
<View
  onLayout={[Function]}
  pointerEvents="box-none"
  style={
    Object {
      "backgroundColor": "#1c2227",
      "flex": 1,
      "paddingBottom": 0,
      "paddingLeft": 0,
      "paddingRight": 0,
      "paddingTop": 20,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#1c2227",
        "flex": 1,
        "paddingBottom": 26.5,
        "paddingLeft": 15,
        "paddingRight": 15,
      }
    }
  >
    <RCTScrollView
      scrollEnabled={true}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <Image
          resizeMode="contain"
          screenNumber={3}
          source={
            Object {
              "testUri": "../../../img/step-3.png",
            }
          }
          style={
            Object {
              "backgroundColor": "transparent",
              "height": 60,
              "marginBottom": 5,
              "width": "100%",
            }
          }
        />
        <View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#ffffff",
                "fontFamily": "TitilliumWeb-Regular",
                "fontSize": 20,
              }
            }
          >
            To generate the strongest possible encryption, we need a source of random input. Scribble in the box below to add randomness to your key.
          </Text>
        </View>
        <View
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "grey",
                "flex": 1,
                "height": 20,
                "marginBottom": 20,
                "marginTop": 10,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#f99d1c",
                  "height": 20,
                  "width": "0%",
                }
              }
            />
          </View>
          <View
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Object {
                "backgroundColor": "white",
                "flex": 1,
                "height": 200,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "justifyContent": "flex-end",
        }
      }
    >
      <View
        accessibilityComponentType="button"
        accessibilityTraits="button"
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "#696969",
            "borderRadius": 3,
            "height": 93.5,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007aff",
                "fontSize": 17,
                "fontWeight": "500",
                "textAlign": "center",
              },
              Object {
                "color": "#dcdcdc",
              },
              Object {
                "color": "#fff",
                "fontFamily": "TitilliumWeb-Regular",
                "fontSize": 16,
              },
              undefined,
            ]
          }
        >
          Done
        </Text>
      </View>
    </View>
  </View>
</View>
`;
